#!/usr/bin/python3
import sys
import codecs

#  Para mismos mensajes M con mismo N, y distinto 'e' y 'c'


# Hallar relacion de Bezout e1*u + e2*v = 1
def bezoult(a,b):
	r=b;x=a;s=z=0;t=y=1
	while r:q=x//r;x,r=r,x%r;y,s=s,y-q*s;z,t=t,z-q*t
	return int(y%(b//x)), int(z%(-a//x))


# Inversa de c2
def egcd(a, b): 
	if a == 0:
		return (b, 0, 1)
	else:
		g, y, x = egcd(b % a, a)
		return (g, x - (b // a) * y, y)


def modinv(a, m): 
	g, x, y = egcd(a, m)
	if g != 1:
		raise Exception('modular inverse does not exist')
	else:
		return x % m 


# Texto plano
def decrypt(c1, u, c2_inv, v, n):

	return (pow(c1, u, n) * pow(c2_inv, -v, n)) % n


def gcd(a, b):
	if b == 0:
		return a
	else:
		return gcd(b, a % b)


def main():

	n = 139139098166563368793906426353584775685986156985503895898108450666153804152721077328595298405359402968586164698349127474583831260369056674398122221948323174927823244488759235828048733639655945179009496153393829487742364880448642168094375012523825513069073691277215422154080122721414171233541059159461497574851
	e1 = 8589547526045561461552680248279757835979283889671962732842177455697481270376746567989084136626965959183030099272662143191917717068451310686662922269968037
	e2 = 1550875426281080713285640421891864359643668278531602865211049325478612197772168543099328132747062677256718488137967707434694189218634201660188716505159465
	c1 = 36251028222184669113487409017454975826565106104917435244458509025325597595097437837292486054294655693705631371301937875354932194238774646471806718003961847732817524682493697446263462385101163784046225206169381882321268194820701612704489320707217757417267296259559235617734319007884212443563740615946094992859
	c2 = 15688769307556061961218947783212296596344168555685824671642275978089568687312912139032947498393471032926950577032514983014105921115080590723699988614214232859981728991429978617821297278877767993295441070537327281816259747634098763766785395724275437311610210946257742159892825472332345447909363995349523623705

	u, v = bezoult(e1, e2)

	c2_inv = modinv(c2, n)
	mensaje = decrypt(c1, u, c2_inv, v, n)
	print("Mensaje descifrado en decimal: {}".format(mensaje))
	
	plano = codecs.decode(hex(mensaje)[2:], "hex_codec").decode("utf-8")
	print("Mensaje texto plano: {}".format(plano))

if __name__ == '__main__':
	main()
